The first step of PB, the enumeration of the conditional sample space through abductive logic programming, could be compared to “logical inference” in ProbLog [9]. While both languages aim to generate a propositional formula and compile it into a decision diagram, “logical inference” in PB is based on abductive logic programming, while ProbLog grounds the relevant parts of the probabilistic program. Moreover, in PB compilation of the boolean formulas is performed using (RO)BDDs, while ProbLog can use a wider range of decision diagrams, e.g. sentential decision diagrams (SDD), deterministic, decomposable negation normal form (d-DNNF). These differences reflect the different aims of the two PPLs: ProbLog focuses on models where “logical inference” needs to be efficient, and the resulting representation, the decision diagrams, need to be compact, while PB focuses on models where “logical inference” is typically easy, however it must be applied repeatedly, according to the nature and the number of the observations. However, in future work, PB could benefit from the use of more compact decision diagrams.
