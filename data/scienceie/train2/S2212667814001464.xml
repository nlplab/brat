<full-text-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/article/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:tb="http://www.elsevier.com/xml/common/table/dtd" xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/dtd" xmlns:sa="http://www.elsevier.com/xml/common/struct-aff/dtd" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:ja="http://www.elsevier.com/xml/ja/dtd" xmlns:ce="http://www.elsevier.com/xml/common/dtd" xmlns:cals="http://www.elsevier.com/xml/common/cals/dtd" xmlns:bk="http://www.elsevier.com/xml/bk/dtd"><coredata><prism:url>http://api.elsevier.com/content/article/pii/S2212667814001464</prism:url><dc:identifier>doi:10.1016/j.ieri.2014.09.098</dc:identifier><eid>1-s2.0-S2212667814001464</eid><prism:doi>10.1016/j.ieri.2014.09.098</prism:doi><pii>S2212-6678(14)00146-4</pii><dc:title>Rapid Topology Design based on Shortest Path Betweenness for Virtual Network Construction </dc:title><prism:publicationName>IERI Procedia</prism:publicationName><prism:aggregationType>Journal</prism:aggregationType><prism:issn>22126678</prism:issn><prism:volume>10</prism:volume><prism:startingPage>105</prism:startingPage><prism:endingPage>111</prism:endingPage><prism:pageRange>105-111</prism:pageRange><dc:format>text/xml</dc:format><prism:coverDate>2014-12-31</prism:coverDate><prism:coverDisplayDate>2014</prism:coverDisplayDate><prism:copyright>Copyright © 2014 Published by Elsevier B.V.</prism:copyright><prism:publisher>Published by Elsevier B.V.</prism:publisher><prism:issueName>International Conference on Future Information Engineering (FIE 2014)</prism:issueName><dc:creator>Urayama, Yasuhiro</dc:creator><dc:creator>Tachibana, Takuji</dc:creator><dc:description>AbstractRecently, a network virtualization technology has attracted considerable attention as one of new generation network technologies. In this paper, in order to permit the rapid changing for a topology of a virtual network, we propose a new virtual network construction method based on the shortest path betweenness. In our proposed method, at first, a service provider receives a user's request for the reconfiguration of the constructed virtual network. In this case, the service provider reconfigures the topology of the constructed virtual network rapidly based on shortest path betweenness. We evaluate the performance of our proposed method with simulation, and we show the effectiveness of our proposed method.</dc:description><openaccess>1</openaccess><openaccessArticle>true</openaccessArticle><openaccessType>Full</openaccessType><openArchiveArticle>false</openArchiveArticle><openaccessSponsorName/><openaccessSponsorType>ElsevierWaived</openaccessSponsorType><openaccessUserLicense>http://creativecommons.org/licenses/by-nc-nd/3.0/</openaccessUserLicense><dcterms:subject>Virtual networks</dcterms:subject><dcterms:subject>Shortest path betweenness</dcterms:subject><dcterms:subject>Robustness</dcterms:subject><dcterms:subject>Topology design</dcterms:subject><dcterms:subject>Reconfiguration;</dcterms:subject><link rel="self" href="http://api.elsevier.com/content/article/pii/S2212667814001464"/><link rel="scidir" href="http://www.sciencedirect.com/science/article/pii/S2212667814001464"/></coredata><originalText><xocs:doc xmlns:xoe="http://www.elsevier.com/xml/xoe/dtd" xsi:schemaLocation="http://www.elsevier.com/xml/xocs/dtd http://be-prod3a/schema/dtds/document/fulltext/xcr/xocs-article.xsd"><xocs:meta><xocs:content-family>serial</xocs:content-family><xocs:content-type>JL</xocs:content-type><xocs:cid>282178</xocs:cid><xocs:ssids><xocs:ssid type="alllist">291210</xocs:ssid><xocs:ssid type="subj">291773</xocs:ssid><xocs:ssid type="subj">291800</xocs:ssid><xocs:ssid type="subj">291880</xocs:ssid><xocs:ssid type="subj">291882</xocs:ssid><xocs:ssid type="content">31</xocs:ssid><xocs:ssid type="oa">90</xocs:ssid></xocs:ssids><xocs:srctitle>IERI Procedia</xocs:srctitle><xocs:normalized-srctitle>IERIPROCEDIA</xocs:normalized-srctitle><xocs:orig-load-date yyyymmdd="20141001">2014-10-01</xocs:orig-load-date><xocs:available-online-date yyyymmdd="20141001">2014-10-01</xocs:available-online-date><xocs:ew-transaction-id>2014-10-10T04:56:58</xocs:ew-transaction-id><xocs:eid>1-s2.0-S2212667814001464</xocs:eid><xocs:pii-formatted>S2212-6678(14)00146-4</xocs:pii-formatted><xocs:pii-unformatted>S2212667814001464</xocs:pii-unformatted><xocs:doi>10.1016/j.ieri.2014.09.098</xocs:doi><xocs:item-stage>S300</xocs:item-stage><xocs:item-version-number>S300.2</xocs:item-version-number><xocs:item-weight>HEAD-AND-TAIL</xocs:item-weight><xocs:hub-eid>1-s2.0-S2212667814X00067</xocs:hub-eid><xocs:timestamp yyyymmdd="20150515">2015-05-15T07:34:50.756359-04:00</xocs:timestamp><xocs:dco>0</xocs:dco><xocs:tomb>0</xocs:tomb><xocs:date-search-begin>20140101</xocs:date-search-begin><xocs:date-search-end>20141231</xocs:date-search-end><xocs:year-nav>2014</xocs:year-nav><xocs:indexeddate epoch="1412186304">2014-10-01T17:58:24.862493Z</xocs:indexeddate><xocs:articleinfo>rawtext articleinfo articletitlenorm authfirstinitialnorm authfirstsurnamenorm cid cids confeditor contenttype copyright crossmark dateloaded dateloadedtxt datesearch datesort dateupdated dco docsubtype doctype doi eid ewtransactionid hubeid indexeddate issn issnnorm itemstage itemtransactionid itemweight oauserlicense openaccess openarchive pg pgfirst pglast pii piinorm pubdateend pubdatestart pubdatetxt pubyr sectiontitle sortorder srctitle srctitlenorm srctype ssids alllist content oa subj suppl tomb vol volfirst volissue volumelist webpdf webpdfpagecount yearnav affil articletitle auth authfirstini authfull authkeywords authlast primabst ref</xocs:articleinfo><xocs:issns><xocs:issn-primary-formatted>2212-6678</xocs:issn-primary-formatted><xocs:issn-primary-unformatted>22126678</xocs:issn-primary-unformatted></xocs:issns><xocs:crossmark is-crossmark="1">true</xocs:crossmark><xocs:vol-first>10</xocs:vol-first><xocs:volume-list><xocs:volume>10</xocs:volume></xocs:volume-list><xocs:suppl>C</xocs:suppl><xocs:vol-iss-suppl-text>Volume 10</xocs:vol-iss-suppl-text><xocs:sort-order>17</xocs:sort-order><xocs:first-fp>105</xocs:first-fp><xocs:last-lp>111</xocs:last-lp><xocs:pages><xocs:first-page>105</xocs:first-page><xocs:last-page>111</xocs:last-page></xocs:pages><xocs:cover-date-orig><xocs:start-date>2014</xocs:start-date></xocs:cover-date-orig><xocs:cover-date-text>2014</xocs:cover-date-text><xocs:cover-date-start>2014-01-01</xocs:cover-date-start><xocs:cover-date-end>2014-12-31</xocs:cover-date-end><xocs:cover-date-year>2014</xocs:cover-date-year><xocs:title-editors-groups><xocs:title-editors-group><ce:title>International Conference on Future Information Engineering (FIE 2014)</ce:title><ce:editors><ce:author-group><ce:author><ce:given-name>Garry</ce:given-name><ce:surname>Lee</ce:surname></ce:author></ce:author-group></ce:editors></xocs:title-editors-group></xocs:title-editors-groups><xocs:hub-sec><xocs:hub-sec-title>Information Engineering</xocs:hub-sec-title></xocs:hub-sec><xocs:document-type>article</xocs:document-type><xocs:document-subtype>fla</xocs:document-subtype><xocs:copyright-line>Copyright © 2014 Published by Elsevier B.V.</xocs:copyright-line><xocs:normalized-article-title>RAPIDTOPOLOGYDESIGNBASEDSHORTESTPATHBETWEENNESSFORVIRTUALNETWORKCONSTRUCTION</xocs:normalized-article-title><xocs:normalized-first-auth-surname>URAYAMA</xocs:normalized-first-auth-surname><xocs:normalized-first-auth-initial>Y</xocs:normalized-first-auth-initial><xocs:references><xocs:ref-info refid="oref0005"/><xocs:ref-info refid="oref0010"/><xocs:ref-info refid="oref0015"/><xocs:ref-info refid="oref0020"/><xocs:ref-info refid="oref0025"/><xocs:ref-info refid="sbref0030"><xocs:ref-normalized-surname>KOU</xocs:ref-normalized-surname><xocs:ref-pub-year>1981</xocs:ref-pub-year><xocs:ref-first-fp>141</xocs:ref-first-fp><xocs:ref-last-lp>145</xocs:ref-last-lp><xocs:ref-normalized-initial>L</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0035"><xocs:ref-normalized-surname>TIZGHADAM</xocs:ref-normalized-surname><xocs:ref-pub-year>2010</xocs:ref-pub-year><xocs:ref-first-fp>39</xocs:ref-first-fp><xocs:ref-last-lp>50</xocs:ref-last-lp><xocs:ref-normalized-initial>A</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="oref0040"/></xocs:references><xocs:refkeys><xocs:refkey3>URAYAMAX2014X105</xocs:refkey3><xocs:refkey4lp>URAYAMAX2014X105X111</xocs:refkey4lp><xocs:refkey4ai>URAYAMAX2014X105XY</xocs:refkey4ai><xocs:refkey5>URAYAMAX2014X105X111XY</xocs:refkey5></xocs:refkeys><xocs:open-access><xocs:oa-article-status is-open-access="1" is-open-archive="0">Full</xocs:oa-article-status><xocs:oa-access-effective-date>2014-10-01T11:57:40Z</xocs:oa-access-effective-date><xocs:oa-sponsor><xocs:oa-sponsor-type>ElsevierWaived</xocs:oa-sponsor-type></xocs:oa-sponsor><xocs:oa-user-license>http://creativecommons.org/licenses/by-nc-nd/3.0/</xocs:oa-user-license><xocs:oa-access-inherited-from winid="http://vtw.elsevier.com/content/oaw/PROC_UNBOUNDED_ESWaived">OA-Window</xocs:oa-access-inherited-from></xocs:open-access><xocs:attachment-metadata-doc><xocs:attachment-set-type>item</xocs:attachment-set-type><xocs:pii-formatted>S2212-6678(14)00146-4</xocs:pii-formatted><xocs:pii-unformatted>S2212667814001464</xocs:pii-unformatted><xocs:eid>1-s2.0-S2212667814001464</xocs:eid><xocs:doi>10.1016/j.ieri.2014.09.098</xocs:doi><xocs:cid>282178</xocs:cid><xocs:timestamp>2014-10-10T10:10:04.76248-04:00</xocs:timestamp><xocs:cover-date-start>2014-01-01</xocs:cover-date-start><xocs:cover-date-end>2014-12-31</xocs:cover-date-end><xocs:attachments><xocs:web-pdf><xocs:attachment-eid>1-s2.0-S2212667814001464-main.pdf</xocs:attachment-eid><xocs:ucs-locator>https://s3.amazonaws.com/prod-ucs-content-store-us-east/content/pii:S2212667814001464/MAIN/application/pdf/b9fc226044595208d1b870783943d4a3/main.pdf</xocs:ucs-locator><xocs:ucs-locator>https://s3-eu-west-1.amazonaws.com/prod-ucs-content-store-eu-west/content/pii:S2212667814001464/MAIN/application/pdf/b9fc226044595208d1b870783943d4a3/main.pdf</xocs:ucs-locator><xocs:filename>main.pdf</xocs:filename><xocs:extension>pdf</xocs:extension><xocs:pdf-optimized>true</xocs:pdf-optimized><xocs:filesize>384113</xocs:filesize><xocs:web-pdf-purpose>MAIN</xocs:web-pdf-purpose><xocs:web-pdf-page-count>7</xocs:web-pdf-page-count><xocs:web-pdf-images><xocs:web-pdf-image><xocs:attachment-eid>1-s2.0-S2212667814001464-main_1.png</xocs:attachment-eid><xocs:ucs-locator>https://s3-eu-west-1.amazonaws.com/prod-ucs-content-store-eu-west/content/pii:S2212667814001464/PREVIEW/image/png/929013d88b0c8db6d0e8a0dd9be80234/main_1.png</xocs:ucs-locator><xocs:ucs-locator>https://s3.amazonaws.com/prod-ucs-content-store-us-east/content/pii:S2212667814001464/PREVIEW/image/png/929013d88b0c8db6d0e8a0dd9be80234/main_1.png</xocs:ucs-locator><xocs:filename>main_1.png</xocs:filename><xocs:extension>png</xocs:extension><xocs:filesize>50846</xocs:filesize><xocs:pixel-height>849</xocs:pixel-height><xocs:pixel-width>656</xocs:pixel-width><xocs:attachment-type>IMAGE-WEB-PDF</xocs:attachment-type><xocs:pdf-page-num>1</xocs:pdf-page-num></xocs:web-pdf-image></xocs:web-pdf-images></xocs:web-pdf></xocs:attachments></xocs:attachment-metadata-doc></xocs:meta><xocs:rawtext> IERI Procedia   10  ( 2014 )  105 â€“ 111  Available online at www.sciencedirect.com 2212-6678  2014 Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license  (http://creativecommons.org/licenses/by-nc-nd/3.0/). Selection and peer review under responsibility of Information Engineering Research Institute doi: 10.1016/j.ieri.2014.09.098  ScienceDirect 2014 International Conference on Future Information Engineering  Rapid Topology Design based on Shortest Path Betweenness for  Virtual Network Construction  Yasuhiro Urayama a , Takuji Tachibana a a Graduate School of Engineering, Univercity of Fukui,3-9-1Bunkyo, Fukui 910-8507,Japan  Abstract  Recently, a network virtualization technology has attracted considerable attention as one of new generation  network technologies. In this paper, in order to permit the rapid changing for a topology of a virtual network,  we propose a new virtual network construction method based on the shortest path betweenness. In our  proposed method, at first, a service provider receives a user's request for the reconfiguration of the constructed  virtual network. In this case, the service provider reconfigures the topology of the constructed virtual network  rapidly based on shortest path betweenness. We evaluate the performance of our proposed method with  simulation, and we show the effectiveness of our proposed method.  ' 2014.Published by Elsevier B.V.  Selection and peer review under responsibility of Information Engineering Research Institute  Keywords: Virtual networks, Shortest path betweenness, Robustness, Topology design, Reconfiguration;  1. Introduction  Recently, a network virtualization technology has attracted a considerable attention as one of new  generation network technologies. In the network virtualization technology, a virtual network can be  constructed on a physical network by using a part of physical network resources such as CPU, memory, and  bandwidth. Here, for the network virtualization, it is important to consider how multiple virtual networks  should be constructed on a physical network. This is because the amount of available network resources is  limited in the physical network and virtual networks have to share the limited resources. Therefore, some  methods for constructing a virtual network have been studied [1].   2014 Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license  (http://creativecommons.org/licenses/by-nc-nd/3.0/). Selection and peer review under responsibility of Information Engineering Research Institute 106   Yasuhiro Urayama and Takuji Tachibana /  IERI Procedia  10 ( 2014 )  105 â€“ 111  In order to construct more virtual networks, [2] has proposed a virtual network construction method that  can maintain a load balancing on nodes and links. Moreover, [3] has proposed another virtual network  construction method. In this method, virtual networks are constructed over a physical network where  conventional data transmission services such as existing Internet services have been utilized. Here, the  conventional services have a high priority and it has to be avoided that qualities of those services are degraded.  In such a case, virtual networks are expected to be constructed over the physical network so as not to degrade  those qualities. Therefore, the proposed method in [3] utilizes an admission control for the virtual network  construction. With this admission control, a new virtual network can be constructed only when the robustness  of the physical network satisfies a construction condition.  Note that some constructed virtual networks are returned to the physical network when its utilization is  finished. Moreover, new virtual networks may be constructed continuously by using network resources which  were returned from users. Therefore, the amount of available network resources on each node and link  changes in time.  Hence, in order to maintain the efficient use of the network resources, some methods that perform the  topology redesign of the virtual network are studied. [4] has proposed a construction method for a virtual  network by using a path splitting and a path migration. In this method, virtual networks are constructed over a  physical network so that the remuneration from users becomes the maximum by using the path splitting and  the path migration. In particular, by using the path migration, the topologies of constructed virtual networks  are redesigned periodically. [5] has proposed a virtual network construction method that considers the  topology change. In this method, the topologies that have already been constructed are redesigned optimally  each time a virtual network is returned to a physical network. Because the method considers the cost about a  topology change, the topology whose service period is short is not changed.  Here, the method in [3] has not considered the topology changing of the virtual network that has already  been constructed. In this conventional method, if the user requests the topology change of the virtual network,  the topology has to be constructed as a new request. This is because the reconfiguration of the virtual network  is not considered. As a result, it takes a long time to change the topology due to the utilizing KMB algorithm.  This may result in the congestion on some nodes and links by wasting the network resources.  Therefore, in this paper, we propose a new virtual network construction method in order to change the  topology rapidly. In our proposed method, when a request about the topology change is received from a user,  the service provider tries to change the topology based on a shortest path betweenness. In our proposed  method, the topology changing is completed with a partial changing of the virtual network. Therefore, the  topology can be changed rapidly by using our proposed method. We evaluate the performance of our  proposed method with simulation and compare its performance with the performance of the conventional  method [3].  The rest of this paper is organized as follows. Section2 introduces related work. Section3 explains the  detail of our proposed method. Section4 shows some numerical examples and Sect. 5 denotes conclusions.  2. Related work  2.1 Virtual network construction based on network robustness  In this section, we explain a virtual network construction method based on network robustness. In this  method, at first, a user sends a request to a service provider. Here, this request includes a set of nodes that  should be included in the virtual network and the amount of resources that should be needed in the virtual  network. After the service provider receives the request from the user, he designs a topology of a virtual  network that satisfies the userâ€™s request with a KMB algorithm [6]. The KMB algorithm consists of a 107 Yasuhiro Urayama and Takuji Tachibana /  IERI Procedia  10 ( 2014 )  105 â€“ 111  Dijkstra's algorithm and a Prim's MST (Minimum Spanning Tree) algorithm. After the topology design of the  virtual network is completed, the service provider checks a robustness of the physical network when the  virtual network is provided with the user. Here, the robustness of the physical network is evaluated by using a  network criticality [7]. Then, if the robustness of the physical network can be maintained, designed virtual  network is constructed and provided with the user. Otherwise, the user's request is rejected due to the  degradation of the robustness of the physical network.  (a) Number d i  of hops and weight w i  for node i.       (b) Shortest path betweenness.  Fig. 1.Calculation example of shortest path betweenness.  2.2 Shortest path betweenness  In order to investigate the characteristic of a link, shortest path betweenness has been proposed [8].The  shortest path betweenness of each link shows the number of shortest paths that pass through the link. In the  following, a link between node i and node j is denoted as l ij , and the shortest path betweenness of l ij is denoted  as b ij . Now, let a set of nodes in a physical network be denoted as V. In V, we focus on node s for calculating the  shortest path betweenness of each link. Here, the number of hops between the node s included V and node i included V is denoted as d i . The number d i  of hops for node i is calculated with a breadth first search  algorithm. Moreover, for node i, w i denotes the number of paths whose number of hops is d i (see Fig. 1(a)).  Here, the initial value of d s  is set to 0 and the initial value of w s  is set to 1.In order to calculate the shortest  path betweenness, d i and w i  for each node are utilized.  The calculation of the shortest path betweenness starts from node t that is not an intermediate node for all  shortest paths and that satisfies d j &lt;d t  for each adjacent node j. For this node t, the shortest path betweenness b jt of link l jt is given by  Ü¾ à¯�à¯§ àµŒ à¯ª à³• à¯ª à³Ÿ  .    (1)  For link l ij whose shortest path betweenness has not been calculated, in a descending order of d i , the  shortest path betweenness b ij of link l ij is calculated as  Ü¾ à¯œà¯� àµŒ áˆºÏƒ Ü¾ à¯œà¯žà¯ž×�à¯� àµ…Í³áˆ» àµˆ à¯ª à³• à¯ª à³” .    (2)  Figure 1(b) shows the shortest path betweenness of each link in a case of Fig. 1(a). 108   Yasuhiro Urayama and Takuji Tachibana /  IERI Procedia  10 ( 2014 )  105 â€“ 111  3. Proposed method  In this section, we propose a new virtual network reconstruction method for maintaining the robustness of  a physical network and performing a rapid topology change. In the following, a user's request about a new  virtual network construction is denoted as Ü´ à¯¡ áˆºáˆ¼Ý’ à¬µ ×› Ç¡Ý’Ú® à¯� ×› áˆ½ Ç¡Ýˆ áˆ» . In the request Ü´ à¯¡ , áˆ¼Ý’ à¬µ ×› Ç¡Ý’Ú® à¯� ×› áˆ½  means a set of  nodes that should be included in the virtual network, H means the number of nodes that should be included in  the virtual network, and l means the amount of resources that is utilized in the virtual network. Moreover, a  request of topology change for the virtual network is denoted as Ü´ à¯– áˆºÝ‡Ç¡Ü¸ à¯¡à¯˜à¯ª ×› áˆ» . In the request R c , k means the  number of the virtual network and Ü¸ à¯¡à¯˜à¯ª ×›  means a set of nodes that should be included in a new virtual network.  3.1 Overview Now, we assume that there are N nodes in a physical network, and K virtual networks have been  constructed on the physical network. Moreover, a virtual network for user Ý‡ áˆºÝ‡àµŒÍ³Ç¡Ü­Ú®áˆ»is denoted as Ü© à¯ž and a set of nodes that are used in the virtual network Ü© à¯ž  is denoted as Ü¸ à¯ž ×› .The proposed method performs a new  construction of the virtual network and a topology changing of the constructed virtual network as shown in  the following.  First, a service provider receives a request Ü´ à¯¡  from a user. In this case, as is the case with the method  explained subsection 2.1, a virtual network that satisfies the user's request are designed by using the KMB  algorithm that consists of Dijkstra algorithm and Prim's MST algorithm. Then, if the virtual network can be  constructed while maintaining the robustness of the physical network, the virtual network is constructed and  provided with the user.  On the other hand, if the service provider receives the request Ü´ à¯–  for Ü© à¯ž  from user k, the service provider  changes a topology Ü© à¯ž based on the shortest path betweenness. If construction conditions can be satisfied  when the topology changing is performed, the topology is changed according to the request R c and it is  provided with the user k. Otherwise, the topology change is not performed and the request R c is rejected.  3.2 Topology redesign based on shortest path betweenness  In this subsection, we explain the detail of the topology redesign method based on shortest path  betweenness. Now we assume that the service provider receives Ü© à¯ž àµŒ áˆºÜ¸ à¯ž ×› Ç¡Ü§ à¯ž ×› Ç¡Ýˆ à¯ž ×› áˆ» .Here, Ü¸ à¯ž ×›  means a set of  nodes which are allocated in Ü© à¯ž , Ü§ à¯ž ×›  means a set of links that are allocated in Ü© à¯ž , and Ýˆ à¯ž ×›  means the amount of  resources that is requested from user k. When the request R c is sent from the user k, the service provider performs a topology changing as follows.  Step1 The service provider takes a node from the set Ü¸ à¯¡à¯˜à¯ª ×›  and the node is set to Ý’ ×› .Then, the shortest path  betweenness that is from the node Ý’ ×›  to each link are calculated according to the procedure that is  explained in subsection 2.2. A cost of each link is set to the value that is the same as the shortest path  betweenness of the link.  Step2 If a node Ý’ à¯œ ×› that adjoins the node Ý’ ×›  is exist and the node Ý’ à¯œ ×›  is included in Ü¸ à¯ž ×› , the node Ý’ à¯œ ×›  and a link  between the node Ý’ à¯œ ×›  and the node Ý’ ×›  are added to the virtual network Ü© à¯ž , and goes to Step 4. Otherwise,  goes to Step 3.  Step3 The service provider selects a link Ýˆ à¯� ×›  that the cost of the link is maximum in links adjacent to the  node Ý’ ×› , and the link Ýˆ à¯� ×›  and a node Ý’ à¯� ×›  are added. Then, the node Ý’ à¯� ×›  is set to the node Ý’ ×›  and returns to  Step 2.  Step4 The node  Ý’ ×›  is deleted from Ü¸ à¯ž ×› . If Ü¸ à¯ž ×›  is an empty set É”, the topology redesign is completed.  Otherwise, returns to Step 1.  109 Yasuhiro Urayama and Takuji Tachibana /  IERI Procedia  10 ( 2014 )  105 â€“ 111  Figure 2 shows an example when the topology redesign based on the shortest path betweenness is  performed. In this figure, a user k has a virtual network that consists of node A, node C, and node E, and the  user sends a request R c. . Here, note that the node set Ü¸ à¯¡à¯˜à¯ª ×›  is {H}. Then, the service provider regards the node  Has a starting node and calculates the shortest path betweenness of each link. After that, network resources  are added in order to connect between the node H and the virtual network Ü© à¯ž . Now, node G and node F are  adjacent to the node H. Moreover, the two nodes are not included in Ü¸ à¯ž ×›  . Therefore, the service provider adds  the node F and a link ÂŽ à­Šà­Œ  to   à­©  with considering the value of the shortest path betweenness. Next, we focus on  the node F. Then, we found that a node C is adjacent to node F and is included in   à­© . Therefore, the node C  and link ÂŽ à­‡à­Š  are added and the topology redesign is completed.  Fig. 2.Topology redesign based on shortest path betweenness.  4. Numerical Examples  In this section, we evaluate the performance of our proposed method with simulation for a physical  network that is an NÃ—N lattice topology. In this physical network, the amount of resources of each node is 60,  and the amount of resources of each link is 50.In the following, we assume that userâ€™s requestsÜ´ à¯¡  about a  virtual network construction arrive at a service provider according to a Poisson process with rate 1.0, and  userâ€™s requests Ü´ à¯–  about the topology changing of a constructed virtual network arrive at the service provider  according to a Poisson process with rate 0.2. For the request Ü´ à¯¡ áˆºáˆ¼Ý’ à¬µ ×› Ç¡Ý’Ú® à¯� ×› áˆ½ Ç¡Ýˆ áˆ» , áˆ¼Ý’ à¬µ ×› Ç¡Ý’Ú® à¯� ×› áˆ½  nodes that are  requested from a user is determined at random, and the amounts l of resources is selected uniformly over  (1,15). Moreover, for the request Ü´ à¯– áˆºÝ‡Ç¡Ü¸ à¯¡à¯˜à¯ª ×› áˆ» , the number of nodes that are included in Ü¸ à¯¡à¯˜à¯ª ×›  is equal to 1, and  it is selected at random. Finally, we assume that the utilization time of a virtual network follows an  exponential distribution with mean 1.0.  Figure 3(a) shows the average redesign time of the virtual network in a case where the number H of nodes  that are requested from user is changed from 5 to 15. Here, we set the number N of nodes of the physical  network is 5. From this result, we found that the average redesign time of the conventional method increases  when H increases. This is because, in the conventional method, the topology is redesigned from scratch.  Therefore, the average redesign time becomes long according to the increase of H. On the other hand, in our  proposed method, because the topology changing is completed by only adding new nodes and links, the  average redesign time is not increased so much even when the H increases.  Figure 3(b) shows the average design time of the virtual network in a case where the number N of nodes in  the physical network is changed from 4 to 7. Here, the number His 5 and is fixed. From this result, we found  that the average redesign time for our proposed method is always shorter than that for the conventional  110   Yasuhiro Urayama and Takuji Tachibana /  IERI Procedia  10 ( 2014 )  105 â€“ 111  method. Therefore, our proposed method is effective regardless of the number of nodes.  5. Conclusions  In this paper, we proposed a rapid topology changing method for virtual networks based on shortest path  betweenness. In our proposed method, when a service provider receives a request about topology changing of  a virtual network, the service provider redesigns the topology rapidly so as to satisfy the userâ€™s request based  on the shortest path betweenness. We evaluated performance of our proposed method with simulation. From  numerical examples, we found that our proposed method performs the rapid topology changing than the  conventional method regardless of the number of nodes. Hence, it is expected that our proposed method is  used widely in the future.  (a) The average redesign time vs the number H of nodes.     (b) The average redesign time vs the number N of nodes. Fig. 3.Performance of our proposed method.  Acknowledgements  This work was partly supported by the Strategic Information and Communications R&amp;D Promotion  Programme of the Ministry of Internal Affairs and Communications, Japan.  References  [1] H.Aun, P.Richard, and N.Akihiro, ``Challenges in Resource Allocation in Network Virtualization,"in Proc.  20th ITC Specialist Seminar on Network Virtualization, Hoi An, Vietnam, May2009.   [2] J.Lu and J.Turner, ``Efficient Mapping of Virtual Networks onto a Shared Substrate,"  WashingtonUniversity, Technical Report, WUCSE-2006-35, 2006.  [3] M.Mori, T.Tachibana, K.Hirata, and K.Sugimoto, ``A Proposed Topology Design and Admission Control  Approach for Improved Network Robustness in Network Virtualization," in Proc. IEEE Globecom 2011, Dec.2011. [4] M.Yu, Y.Yi, J.Rexford, and M.Chiang, ``RethinkingVirtual Network Embedding: Substrate Supportfor  Path SplittingandMigration," ACM SIGCOMM Computer Communication Review, vol.38, no.2, pp.17-29,  Apr.2008.  111 Yasuhiro Urayama and Takuji Tachibana /  IERI Procedia  10 ( 2014 )  105 â€“ 111  [5] Z.Shun-li and Q.Xue-song, ``A Novel Virtual Network Mapping Algorithm for Cost Minimizing,"Cyber  Journals: Multidisciplinary Journals in Science and Technology, Journal of Selected Areas in  Telecommunications (JSAT), January Edition, Jan.2011.  [6] L.Kou, G.Markowsky, and L.Berman,``A Fast Algorithm for Steiner Trees," ActaInformatica, vol.15, no.2,  pp.141-145, June 1981.  [7]A.Tizghadam and A.Leon-Garcia, ``Autonomic Traffic Engineering for Network Robustness," IEEE  Journal on Selected Areas in Communication, vol.28, no.1, pp.39-50, Jan.2010.  [8]M.E.J.Newman and M.Girvan, ``Finding and Evaluating Community Structure in Networks," Physical  Review, E69, Feb.2004.  uniformly over  (1,15). Moreover, for the request Ü´ à¯– áˆºÝ‡Ç¡Ü¸ à¯¡à¯˜à¯ª ×› áˆ» , the number of nodes that are included in Ü¸ à¯¡à¯˜à¯ª ×›  is equal to 1, and  it is selected at random. Finally, we assume that the utilization time of a virtual network follows an  exponential distribution with mean 1.0.  Figure 3(a) shows the average redesign time of the virtual network in a case where the number H of nodes  that are requested from user is changed from 5 to 15. Here, we set the number N of nodes of the physical  network is 5. From this result, we found that the average redesign time of the conventional method increases  when H increases. This is because, in the conventional method, the topology is redesigned from scratch.  Therefore, the average redesign time becomes long according to the increase of H. On the other hand, in our  proposed method, because the topology changing is completed by only adding new nodes and links, the  average redesign time is not increased so much even when the H increases.  Figure 3(b) shows the average design time of the virtual network in a ca</xocs:rawtext><xocs:serial-item><article xmlns="http://www.elsevier.com/xml/ja/dtd" version="5.2" xml:lang="en" docsubtype="fla"><item-info><jid>IERI</jid><aid>463</aid><ce:pii>S2212-6678(14)00146-4</ce:pii><ce:doi>10.1016/j.ieri.2014.09.098</ce:doi><ce:copyright type="unknown" year="2014"/></item-info><head><ce:article-footnote><ce:label>☆</ce:label><ce:note-para id="npar0005" view="all">Selection and peer review under responsibility of Information Engineering Research Institute.</ce:note-para></ce:article-footnote><ce:title id="tit0005">Rapid Topology Design based on Shortest Path Betweenness for Virtual Network Construction</ce:title><ce:author-group id="aug0005"><ce:author id="aut0005"><ce:given-name>Yasuhiro</ce:given-name><ce:surname>Urayama</ce:surname><ce:cross-ref id="crf0005" refid="cor0005"><ce:sup loc="post">⁎</ce:sup></ce:cross-ref><ce:e-address id="eadd0005" type="email">yasuhiro_u@network.fuis.u-fuki.ac.jp</ce:e-address></ce:author><ce:author id="aut0010"><ce:given-name>Takuji</ce:given-name><ce:surname>Tachibana</ce:surname></ce:author><ce:affiliation id="aff0005"><ce:textfn>Graduate School of Engineering, Univercity of Fukui, 3-9-1 Bunkyo, Fukui 910-8507, Japan</ce:textfn></ce:affiliation><ce:correspondence id="cor0005"><ce:label>⁎</ce:label><ce:text>Corresponding author.</ce:text></ce:correspondence></ce:author-group><ce:abstract id="abs0005" view="all" class="author"><ce:section-title id="sect0005">Abstract</ce:section-title><ce:abstract-sec id="abst0005" view="all"><ce:simple-para id="spar0005" view="all">Recently, a network virtualization technology has attracted considerable attention as one of new generation network technologies. In this paper, in order to permit the rapid changing for a topology of a virtual network, we propose a new virtual network construction method based on the shortest path betweenness. In our proposed method, at first, a service provider receives a user's request for the reconfiguration of the constructed virtual network. In this case, the service provider reconfigures the topology of the constructed virtual network rapidly based on shortest path betweenness. We evaluate the performance of our proposed method with simulation, and we show the effectiveness of our proposed method.</ce:simple-para></ce:abstract-sec></ce:abstract><ce:keywords id="kwd0005" class="keyword" view="all"><ce:section-title id="sect0010">Keywords</ce:section-title><ce:keyword id="kw0005"><ce:text>Virtual networks</ce:text></ce:keyword><ce:keyword id="kw0010"><ce:text>Shortest path betweenness</ce:text></ce:keyword><ce:keyword id="kw0015"><ce:text>Robustness</ce:text></ce:keyword><ce:keyword id="kw0020"><ce:text>Topology design</ce:text></ce:keyword><ce:keyword id="kw0025"><ce:text>Reconfiguration;</ce:text></ce:keyword></ce:keywords></head><tail view="all"><ce:bibliography id="bibl0005" view="all"><ce:section-title id="sect0020">References</ce:section-title><ce:bibliography-sec id="bibs0005" view="all"><ce:bib-reference id="bib0005"><ce:label>[1]</ce:label><ce:other-ref id="oref0005"><ce:textref>H. Aun, P. Richard, N. Akihiro, “Challenges in Resource Allocation in Network Virtualization,”in <ce:italic>Proc. 20th ITC Specialist Seminar on Network Virtualization</ce:italic>, Hoi An, Vietnam, May2009.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0010"><ce:label>[2]</ce:label><ce:other-ref id="oref0010"><ce:textref>J. Lu and J. Turner, “Efficient Mapping of Virtual Networks onto a Shared Substrate,” <ce:italic>WashingtonUniversity, Technical Report</ce:italic>, WUCSE-2006-35, 2006.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0015"><ce:label>[3]</ce:label><ce:other-ref id="oref0015"><ce:textref>M. Mori, T. Tachibana, K. Hirata, and K. Sugimoto, “A Proposed Topology Design and Admission Control Approach for Improved Network Robustness in Network Virtualization,” in Proc. IEEE Globecom 2011, Dec.2011.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0020"><ce:label>[4]</ce:label><ce:other-ref id="oref0020"><ce:textref>M. Yu, Y. Yi, J. Rexford, and M. Chiang, “RethinkingVirtual Network Embedding: Substrate Supportfor Path SplittingandMigration,” <ce:italic>ACM SIGCOMM Computer Communication Review</ce:italic>, vol.38, no.2, pp.17-29, Apr.2008.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0025"><ce:label>[5]</ce:label><ce:other-ref id="oref0025"><ce:textref>Z. Shun-li and Q. Xue-song, “A Novel Virtual Network Mapping Algorithm for Cost Minimizing,” <ce:italic>Cyber Journals: Multidisciplinary Journals in Science and Technology, Journal of Selected Areas in Telecommunications (JSAT)</ce:italic>, January Edition, Jan.2011.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0030"><ce:label>[6]</ce:label><sb:reference id="sbref0030"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>L.</ce:given-name><ce:surname>Kou</ce:surname></sb:author><sb:author><ce:given-name>G.</ce:given-name><ce:surname>Markowsky</ce:surname></sb:author><sb:author><ce:given-name>L.</ce:given-name><ce:surname>Berman</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>A Fast Algorithm for Steiner Trees</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>ActaInformatica</sb:maintitle></sb:title><sb:volume-nr>15</sb:volume-nr></sb:series><sb:issue-nr>2</sb:issue-nr><sb:date>1981, June</sb:date></sb:issue><sb:pages><sb:first-page>141</sb:first-page><sb:last-page>145</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0035"><ce:label>[7]</ce:label><sb:reference id="sbref0035"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Tizghadam</ce:surname></sb:author><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Leon-Garcia</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Autonomic Traffic Engineering for Network Robustness</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>IEEE Journal on Selected Areas in Communication</sb:maintitle></sb:title><sb:volume-nr>28</sb:volume-nr></sb:series><sb:issue-nr>1</sb:issue-nr><sb:date>2010, Jan</sb:date></sb:issue><sb:pages><sb:first-page>39</sb:first-page><sb:last-page>50</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0040"><ce:label>[8]</ce:label><ce:other-ref id="oref0040"><ce:textref>M.E.J. Newman and M. Girvan, “Finding and Evaluating Community Structure in Networks,” <ce:italic>Physical</ce:italic>. <ce:italic>Review</ce:italic>, E69, Feb.2004.</ce:textref></ce:other-ref></ce:bib-reference></ce:bibliography-sec></ce:bibliography></tail></article></xocs:serial-item></xocs:doc></originalText></full-text-retrieval-response>