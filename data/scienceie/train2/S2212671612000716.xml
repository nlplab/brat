<full-text-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/article/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:tb="http://www.elsevier.com/xml/common/table/dtd" xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/dtd" xmlns:sa="http://www.elsevier.com/xml/common/struct-aff/dtd" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:ja="http://www.elsevier.com/xml/ja/dtd" xmlns:ce="http://www.elsevier.com/xml/common/dtd" xmlns:cals="http://www.elsevier.com/xml/common/cals/dtd" xmlns:bk="http://www.elsevier.com/xml/bk/dtd"><coredata><prism:url>http://api.elsevier.com/content/article/pii/S2212671612000716</prism:url><dc:identifier>doi:10.1016/j.aasri.2012.06.070</dc:identifier><eid>1-s2.0-S2212671612000716</eid><prism:doi>10.1016/j.aasri.2012.06.070</prism:doi><pii>S2212-6716(12)00071-6</pii><dc:title>Research on Object-orientation-based Open Shape Model in Three-dimensional Space </dc:title><prism:publicationName>AASRI Procedia</prism:publicationName><prism:aggregationType>Journal</prism:aggregationType><prism:issn>22126716</prism:issn><prism:volume>1</prism:volume><prism:startingPage>448</prism:startingPage><prism:endingPage>453</prism:endingPage><prism:pageRange>448-453</prism:pageRange><dc:format>text/xml</dc:format><prism:coverDate>2012-12-31</prism:coverDate><prism:coverDisplayDate>2012</prism:coverDisplayDate><prism:copyright>Copyright © 2012 Published by Elsevier B.V.</prism:copyright><prism:publisher>Published by Elsevier B.V.</prism:publisher><prism:issueName>AASRI Conference on Computational Intelligence and Bioinformatics</prism:issueName><dc:creator>Yunliang, Wang</dc:creator><dc:creator>Weijie, Gu</dc:creator><dc:description>AbstractBased on the description model of object-orientation-based direction relation in two-dimensional space, the description mode of object-orientation-based direction relation in three-dimensional space is proposed. The basic idea is that the actual direction region is modeled as an open shape. The computation related to the world boundary of spatial direction region is eliminated, and the processing of the direction predicates is converted into the processing of topological operations between open shapes and closed geometry objects. The algorithms of topological operations between open shapes and closed geometry objects are presented and the theoretical proof for the correctness and completeness of the algorithms is performed.</dc:description><openaccess>1</openaccess><openaccessArticle>true</openaccessArticle><openaccessType>Full</openaccessType><openArchiveArticle>false</openArchiveArticle><openaccessSponsorName/><openaccessSponsorType/><openaccessUserLicense>http://creativecommons.org/licenses/by-nc-nd/3.0/</openaccessUserLicense><dcterms:subject>Open shape</dcterms:subject><dcterms:subject>Object-oriented-based</dcterms:subject><dcterms:subject>Direction relation</dcterms:subject><link rel="self" href="http://api.elsevier.com/content/article/pii/S2212671612000716"/><link rel="scidir" href="http://www.sciencedirect.com/science/article/pii/S2212671612000716"/></coredata><originalText><xocs:doc xmlns:xoe="http://www.elsevier.com/xml/xoe/dtd" xsi:schemaLocation="http://www.elsevier.com/xml/xocs/dtd http://be-prod3a/schema/dtds/document/fulltext/xcr/xocs-article.xsd"><xocs:meta><xocs:content-family>serial</xocs:content-family><xocs:content-type>JL</xocs:content-type><xocs:cid>282179</xocs:cid><xocs:ssids><xocs:ssid type="alllist">291210</xocs:ssid><xocs:ssid type="subj">291791</xocs:ssid><xocs:ssid type="subj">291877</xocs:ssid><xocs:ssid type="subj">291882</xocs:ssid><xocs:ssid type="subj">291883</xocs:ssid><xocs:ssid type="content">31</xocs:ssid><xocs:ssid type="oa">90</xocs:ssid></xocs:ssids><xocs:srctitle>AASRI Procedia</xocs:srctitle><xocs:normalized-srctitle>AASRIPROCEDIA</xocs:normalized-srctitle><xocs:orig-load-date yyyymmdd="20120821">2012-08-21</xocs:orig-load-date><xocs:available-online-date yyyymmdd="20120823">2012-08-23</xocs:available-online-date><xocs:ew-transaction-id>2014-11-18T16:43:20</xocs:ew-transaction-id><xocs:eid>1-s2.0-S2212671612000716</xocs:eid><xocs:pii-formatted>S2212-6716(12)00071-6</xocs:pii-formatted><xocs:pii-unformatted>S2212671612000716</xocs:pii-unformatted><xocs:doi>10.1016/j.aasri.2012.06.070</xocs:doi><xocs:item-stage>S300</xocs:item-stage><xocs:item-version-number>S300.3</xocs:item-version-number><xocs:item-weight>HEAD-AND-TAIL</xocs:item-weight><xocs:hub-eid>1-s2.0-S2212671612X00027</xocs:hub-eid><xocs:timestamp yyyymmdd="20150515">2015-05-15T07:34:50.698394-04:00</xocs:timestamp><xocs:dco>0</xocs:dco><xocs:tomb>0</xocs:tomb><xocs:date-search-begin>20120101</xocs:date-search-begin><xocs:date-search-end>20121231</xocs:date-search-end><xocs:year-nav>2012</xocs:year-nav><xocs:indexeddate epoch="1345507200">2012-08-21T00:00:00Z</xocs:indexeddate><xocs:articleinfo>rawtext articleinfo articletitlenorm authfirstinitialnorm authfirstsurnamenorm cid cids confeditor contenttype copyright crossmark dateloaded dateloadedtxt datesearch datesort dateupdated dco docsubtype doctype doi eid ewtransactionid hubeid indexeddate issn issnnorm itemstage itemtransactionid itemweight oauserlicense openaccess openarchive pg pgfirst pglast pii piinorm pubdateend pubdatestart pubdatetxt pubyr sortorder srctitle srctitlenorm srctype ssids alllist content oa subj suppl tomb vol volfirst volissue volumelist webpdf webpdfpagecount yearnav affil articletitle auth authfirstini authfull authkeywords authlast primabst ref</xocs:articleinfo><xocs:issns><xocs:issn-primary-formatted>2212-6716</xocs:issn-primary-formatted><xocs:issn-primary-unformatted>22126716</xocs:issn-primary-unformatted></xocs:issns><xocs:crossmark is-crossmark="0">false</xocs:crossmark><xocs:vol-first>1</xocs:vol-first><xocs:volume-list><xocs:volume>1</xocs:volume></xocs:volume-list><xocs:suppl>C</xocs:suppl><xocs:vol-iss-suppl-text>Volume 1</xocs:vol-iss-suppl-text><xocs:sort-order>70</xocs:sort-order><xocs:first-fp>448</xocs:first-fp><xocs:last-lp>453</xocs:last-lp><xocs:pages><xocs:first-page>448</xocs:first-page><xocs:last-page>453</xocs:last-page></xocs:pages><xocs:cover-date-orig><xocs:start-date>2012</xocs:start-date></xocs:cover-date-orig><xocs:cover-date-text>2012</xocs:cover-date-text><xocs:cover-date-start>2012-01-01</xocs:cover-date-start><xocs:cover-date-end>2012-12-31</xocs:cover-date-end><xocs:cover-date-year>2012</xocs:cover-date-year><xocs:title-editors-groups><xocs:title-editors-group><ce:title>AASRI Conference on Computational Intelligence and Bioinformatics</ce:title><ce:editors><ce:author-group><ce:author><ce:degrees>Dr.</ce:degrees><ce:given-name>Wei</ce:given-name><ce:surname>Deng</ce:surname></ce:author><ce:affiliation><ce:textfn>American Applied Sciences Research Institute, Suit C, 637 Vineland Ave, La Puente, CA 91746, United States of America</ce:textfn></ce:affiliation></ce:author-group></ce:editors></xocs:title-editors-group></xocs:title-editors-groups><xocs:document-type>article</xocs:document-type><xocs:document-subtype>fla</xocs:document-subtype><xocs:copyright-line>Copyright © 2012 Published by Elsevier B.V.</xocs:copyright-line><xocs:normalized-article-title>RESEARCHOBJECTORIENTATIONBASEDOPENSHAPEMODELINTHREEDIMENSIONALSPACE</xocs:normalized-article-title><xocs:normalized-first-auth-surname>YUNLIANG</xocs:normalized-first-auth-surname><xocs:normalized-first-auth-initial>W</xocs:normalized-first-auth-initial><xocs:references><xocs:ref-info refid="bib0005"/><xocs:ref-info refid="bib0010"/><xocs:ref-info refid="bib0015"/><xocs:ref-info refid="bib0020"/><xocs:ref-info refid="bib0025"/></xocs:references><xocs:refkeys><xocs:refkey3>YUNLIANGX2012X448</xocs:refkey3><xocs:refkey4lp>YUNLIANGX2012X448X453</xocs:refkey4lp><xocs:refkey4ai>YUNLIANGX2012X448XW</xocs:refkey4ai><xocs:refkey5>YUNLIANGX2012X448X453XW</xocs:refkey5></xocs:refkeys><xocs:open-access><xocs:oa-article-status is-open-access="1" is-open-archive="0">Full</xocs:oa-article-status><xocs:oa-access-effective-date>2013-07-15T12:00:47Z</xocs:oa-access-effective-date><xocs:oa-user-license>http://creativecommons.org/licenses/by-nc-nd/3.0/</xocs:oa-user-license><xocs:oa-access-inherited-from winid="http://vtw.elsevier.com/content/oaw/GEN_UNBOUNDED_ESWaived">OA-Window</xocs:oa-access-inherited-from></xocs:open-access><xocs:attachment-metadata-doc><xocs:attachment-set-type>item</xocs:attachment-set-type><xocs:pii-formatted>S2212-6716(12)00071-6</xocs:pii-formatted><xocs:pii-unformatted>S2212671612000716</xocs:pii-unformatted><xocs:eid>1-s2.0-S2212671612000716</xocs:eid><xocs:doi>10.1016/j.aasri.2012.06.070</xocs:doi><xocs:cid>282179</xocs:cid><xocs:timestamp>2014-11-19T14:21:05.841038-05:00</xocs:timestamp><xocs:cover-date-start>2012-01-01</xocs:cover-date-start><xocs:cover-date-end>2012-12-31</xocs:cover-date-end><xocs:attachments><xocs:web-pdf><xocs:attachment-eid>1-s2.0-S2212671612000716-main.pdf</xocs:attachment-eid><xocs:ucs-locator>https://s3.amazonaws.com/prod-ucs-content-store-us-east/content/pii:S2212671612000716/MAIN/application/pdf/82379b1550b1841f18bdcf422b7d2332/main.pdf</xocs:ucs-locator><xocs:ucs-locator>https://s3-eu-west-1.amazonaws.com/prod-ucs-content-store-eu-west/content/pii:S2212671612000716/MAIN/application/pdf/82379b1550b1841f18bdcf422b7d2332/main.pdf</xocs:ucs-locator><xocs:filename>main.pdf</xocs:filename><xocs:extension>pdf</xocs:extension><xocs:pdf-optimized>true</xocs:pdf-optimized><xocs:filesize>207814</xocs:filesize><xocs:web-pdf-purpose>MAIN</xocs:web-pdf-purpose><xocs:web-pdf-page-count>6</xocs:web-pdf-page-count><xocs:web-pdf-images><xocs:web-pdf-image><xocs:attachment-eid>1-s2.0-S2212671612000716-main_1.png</xocs:attachment-eid><xocs:ucs-locator>https://s3-eu-west-1.amazonaws.com/prod-ucs-content-store-eu-west/content/pii:S2212671612000716/PREVIEW/image/png/7db4cf412f6f87299eaff5c7dcbd7cd8/main_1.png</xocs:ucs-locator><xocs:ucs-locator>https://s3.amazonaws.com/prod-ucs-content-store-us-east/content/pii:S2212671612000716/PREVIEW/image/png/7db4cf412f6f87299eaff5c7dcbd7cd8/main_1.png</xocs:ucs-locator><xocs:filename>main_1.png</xocs:filename><xocs:extension>png</xocs:extension><xocs:filesize>44265</xocs:filesize><xocs:pixel-height>849</xocs:pixel-height><xocs:pixel-width>656</xocs:pixel-width><xocs:attachment-type>IMAGE-WEB-PDF</xocs:attachment-type><xocs:pdf-page-num>1</xocs:pdf-page-num></xocs:web-pdf-image></xocs:web-pdf-images></xocs:web-pdf></xocs:attachments></xocs:attachment-metadata-doc></xocs:meta><xocs:rawtext> AASRI Procedia   1  ( 2012 )  448 â€“ 453  2212-6716  2012 Published by Elsevier Ltd.  doi: 10.1016/j.aasri.2012.06.070  2012 AASRI Conference on Computational Intelligence and Bioinformatics  Research on Object-orientation-based Open Shape Model in  Three-dimensional Space  Wang Yunliang, Gu Weijie *  Changzhou Institute of Mechatronic Technology, Changzhou 213164, China Abstract  Based on the description model of object-orientation-based direction relation in two-dimensional space, the description  mode of object-orientation-based direction relation in three-dimensional space is proposed. The basic idea is that the  actual direction region is modeled as an open shape. The computation related to the world boundary of spatial direction  region is eliminated, and the processing of the direction predicates is converted into the processing of topological  operations between open shapes and closed geometry objects. The algorithms of topological operations between open  shapes and closed geometry objects are presented and the theoretical proof for the correctness and completeness of the  algorithms is performed.  2012 Published by Elsevier B.V. Selection and/or peer review under responsibility of American Applied  Science Research Institute  Keywords: Open shape; Object-oriented-based; Direction relation  1. Introduction  Direction relation, which is frequently used as selection conditions in spatial queries, is an important  concept in spatial database [1]. At present, the research on the description model for direction relation is  mainly in two-dimensional space, and there is relatively little research on that in three-dimensional space,  which is only mentioned that the description model for the object-orientation-based direction relation in two- dimensional space can be extended and discussed in three-dimensional space, but there is no further study in  * Corresponding author. Tel.: 13775205406.  E-mail address: gwjysu@163.com.  AASRI Procedia www.elsevier.com/locate/procedia Available online at www.sciencedirect.com Open access under CC BY-NC-ND license. Open access under CC BY-NC-ND license. 449 Wang Yunliang and Gu Weijie /  AASRI Procedia  1 ( 2012 )  448 â€“ 453  the reference [2]. It is very important for a spatial database management system to provide a method for  modelling and processing direction queries in three-dimensional space [3]. Therefore, the research on object- orientation-based open shape model in three-dimensional space is significant.  Based on the description model of object-orientation-based direction relation in two-dimensional space,  the corresponding description model of in three-dimensional space is proposed. The computation related to the  world boundary of spatial direction region is eliminated, and the processing of the direction predicates is  converted into the processing of topological operations between open shapes and closed geometry objects. The  algorithms of topological operations between open shapes and closed geometry objects are presented and the  theoretical proof for the correctness and completeness of the algorithms is performed.  2. Description of object-orientation-based direction relation in three-dimensional space  Any spatial entity in three-dimensional space is a directional n-dimensional false manifold [4]. It can be  divided into a number of k-simplex (kd n) which has lower dimension than the entity or equivalent dimension  to it and the connectivity but not overlapping with each other. Spatial entity in three-dimensional space is  composed of five basic elements, including 0-simplex, 1-simplex, 2-simplex, and 3-simplex [5]. The  corresponding geometries are point, line segment, triangle and tetrahedron respectively, which are called  simplex data structures. Simplex data structure is the simplest geometry structure in three-dimensional, which  can make the spatial operations easier.  Front, right and above of the reference object is represented by three orthogonal vectors of o front , o right  and  o above . For simplicity, r G , f G  and a G  is used to represent the three vectors of  o front , o right  and  o above . Therefore, the space, in which the reference object A is, is divided into 2793  u  parts by planes  max r S Çƒ min r S Çƒ max f S Çƒ min f S Çƒ max a S and min a S  as shown in Fig.1. That is  ji O , , iÂ�{EF,RF,ER,RB, EB,LB,  EL, LF,SP}, jÂ�{up,between,down}.  Fig.1.  Spaces divided by planes  3. Definition of direction relation predicates  The two direction operations of reverse and isBewteen are used to define direction predicates. Here, there  are four vectors: d G , 1 d G , 2 d G and 3 d G . Then the reverse operation can be defined as: (-1) 1 d G u ; The isBetween operation can be defined as: d G isBetween( 1 d G , 2 d G , 3 d G )is true iff   c 1 &gt;0,    c 2 &gt;0,   c 3 &gt;0, s.t. d G = c 1 1 d G + 450   Wang Yunliang and Gu Weijie /  AASRI Procedia  1 ( 2012 )  448 â€“ 453  c 2 2 d G + c 3 3 d G . A predicate between target region A and reference region B can be defined in terms of the  directional relationship between one point inside A and one or two endpoints of B. r G , f G and a G  represent the  directions of three coordinates axes respectively in the new coordinate system. Now three kinds of shapes are derived from Fig.1 and are used to represent the 27 parts, as shown in  Fig.2.  Fig.2. Three kinds of shapes derived  4. Object-orientation-based open shape models  4.1. Definition of open shape  Open shapes refer to the geometries whose boundaries are partially defined. Open shape objects have  infinite interiors and extend beyond the boundary of the embedding world. Now we provide the definition of  new ADT OpenShape, which is defined as a base class hierarchy to represent open geometries whose  boundaries are not closed. We focus on the data types that are needed to model open direction region. The  function interfaces for OpenShape related to the processing of direction relation queries can be defined in C++  notation. Fig.3. shows some examples of open shapes that are useful for the processing of direction relation  queries. Therefore, new data types for open boxes can be defined as derived classes of OpenShape, and the  attributes can be described using open rectangles, directions and points. We only show the attributes and  constructors of each open shape class, as shown in Table 1:  Fig.3. Examples of open shapes  Table 1 Abstract Data Types for Open Shapes  ADT attributes constructors  OpenLine1 startPoint: Point; dir: Direction OpenLine1(Point, Direction);  OpenRect1 Vertex1:Point;vertex2:Point; dir: Direction  OpenRect1(Point, Point, Direction)  OpenRect2 startPoint: Point; dir1:Direction;dir2:Direction  OpenRect2(Point, Direction, Direction)  OpenBox1 openrect:OpenRect2;dir: Direction OpenBox1(Direction ,OpenRect2(Point,  Direction, Direction))  OpenBox2 openrect1:OpenRect1;dir: Direction OpenBox2(Direction,OpenRect1(Point, Point,  Direction))  OpenBox3 openrect1:OpenRect1;  openrect2:OpenRect1  OpenBox3(OpenRect1(Point,Point, Direction),  OpenRect1(Point, Point, Direction))  451 Wang Yunliang and Gu Weijie /  AASRI Procedia  1 ( 2012 )  448 â€“ 453  4.2. Topological Operations on Open Shapes  In this section, we will focus on defining a topological operation, namely, interiorIntersects, since this  operation is needed to solve direction predicates. The interiorIntersects (open shape O, closed shape C)  operation is defined, where O could be an OpenBox1, OpenBox2 or OpenBox3 and closed shape C could be a  box. The implementation of interiorIntersects uses the two topological operations of contains and crosses. For  any pair of open shape O and closed shape C, the interiorIntersects relation between them is defined as:  O.interiorIntersects(C)=TRUEÂœ interior(C)Âˆ  interior(O) Iz In other words, O.interiorIntersects(C) is true if C is contained in O or C overlaps O. Since a closed object C  cannot contain an open object O due to infinite extent, we do not have to check for C contains O. We will  discuss the implementation of the OpenBox1.interiorIntersects(Box), OpenBox2. interiorIntersects(Box) and  OpenBox3.interiorIntersects( Box ) respectively.  4.2.1The interiorIntersects operation for OpenBox1  An OpenBox1 interiorIntersects a rectangle if there exists a set of points which belong to both the  interior of the OpenBox1 and the interior of the box. Fig.4 shows several situations that an OpenBox1  interiorIntersects a box. The boolean value of interiorIntersects operation can be determined by enumerating  all possibilities of the interiorIntersecting relationship between an OpenBox1 and a box.  O.interiorIntersects(C) is TRUE if and only if at least one of the following three conditions is true:  (1)At least one of the endpoints of C is contained in O (e.g. Fig.4 (a));  (2)All endpoints of C are inside O;(e.g. Fig. 4(b));  (3)At least one endpoint of C is outside O and at least one OpenLine1 of the three OpenLine1s boundary  of O crosses C (e.g. Fig. 4(c));  The first case can be tested by using OpenBox1. contains(Point) operation, the second case is checked by  OpenBox1.contains(box) operation, and the third case is checked by using OpenLine1.crosses(box). If any of  the endpoints of O is within C, the interiorIntersects operation can be determined to be true without further  tests as shown in Fig. 4(d). The pseudo-code for the OpenBox1.interiorIntersects(Box) operation is described  as Algorithm 1. Fig.4.  An OpenBox1 interiorIntersects a Box  Algorithm 1:OpenBox1 interiorIntersects a Box   Input: The box needs to be checked;         The current OpenBox1 object, which has attributes (dir1, OpenRect2 (startPoint, dir2,dir3));         OpenBox1::interiorIntersects(Box, box){           /*case1, Fig.4(a)*/            for each epÂ�endpoints of box               if(contains(ep))                   return TRUE;           /*case2,Fig.4(b)*/            if(contains(box))                return TRUE;  452   Wang Yunliang and Gu Weijie /  AASRI Procedia  1 ( 2012 )  448 â€“ 453           /*case3,Fig.4(c)*/            opline1a=Openline1(startPoint, dir1);            opline1b=Openline1(startPoint, dir2);            opline1c=Openline1(startPoint, dir3);  if(opline1a.crosses(box)||  opline1b.crosses(box)||  opline1c.crosses(box))                        return TURE;                    return FALSE;  } 4.2.2 The interiorIntersects operation for OpenBox2  The situation of OpenBox2.interiorIntersects(Box) is similar with Open Box1.interior- Intersects(Box)  as shown in Fig.5. The pseudo-code for the OpenBox2.interiorIntersects(Box) operation is described as  Algorithm 2.   Fig.5.  An OpenBox2 interiorIntersects a Box  Algorithm 2.:OpenBox2 interiorIntersects a Box  Input: The box needs to be checked;              The current OpenBox2 object, which has attributes(dir1,OpenRect1(endp1,endp2,dir2));        OpenBox2::interiorIntersects(Box, box){          /*case1, Fig5(a)*/           for each epÂ�endpoints of box             if(contains(ep))                return TRUE;         /*case2,Fig.5(b)*/          if(contains(box))             return TRUE;        /*case3,Fig.5(c)*/         opline1a=Openline1(endp1, dir1);         opline1b=Openline1(endp1, dir2);         opline1c=Openline1(endp2, dir2);  opline1d=Openline1(endp2, dir1);  if(opline1a.crosses(box)||opline1b.crosses(box)||opline1c.crosses(box)|| opline1d.crosses(box))                return TURE;            return FALSE;  } Lemma 2: Algorithm 1and Algorithm 2 are complete and correct.  Proof: Algorithm 1 tests three cases and it returns TRUE if and only if one of these three conditions is true.  This guarantees the correctness of the algorithm, i.e., the algorithm returns TRUE only if the OpenBox1  interiorIntersects the box.  Letâ€™s consider a pair of disjoint OpenBox1 and box. Move the box horizontally and then the box will  453 Wang Yunliang and Gu Weijie /  AASRI Procedia  1 ( 2012 )  448 â€“ 453  touch the OpenBox1. When continuously moving the box horizontally, OpenBox1 interiorIntersects the box,  and the relationship between OpenBox1 and box falls into the three cases as described in algorithm 1.This  guarantees the completeness of the algorithm, i.e., the algorithm returns FALSE only when there is no  intersection between the interior of OpenBox1 and the interior of the box. The arguments of completeness and  correctness for the algorithm 2 are similar.  5. Conclusions  In this paper, the description model of object-orientation-based direction relation in three-dimensional is  put forward based on that in two dimensional space. Then the base class of OpenShape in two-dimensional  space is extended, and an object-orientation-based open shape model based on the description model for  direction relations in three-dimensional space is proposed. The basic idea is that the actual direction region is  modeled as an open shape by constructing a new ADT OpenShape, the computation related to the world  boundary of spatial direction region is eliminated, and the processing of the direction predicates is converted  into the processing of topological operations between open shapes and closed geometry objects. The I/O and  CPU cost of the processing of direction relation queries based on the new open shape model in three- dimensional space, which will be presented in the next paper, is reduced by improving the filtering  effectiveness. In future work, we will continue to extend the base class of OpenShape, and study the  processing of direction relation queries involving viewer-based direction predicates by deriving more class  and operations for ADT OpenShape. The processing of object-orientation-based direction relation queries in a  mobile environment is also a direction of future work.  References  [1] Shashi Shekhar,Xuan Liu,Sanjay Chawla. An Object Model of Direction and Its Implications[J]  GeoInformatica, 2009,13,(4):357~379  [2] X.Liu,S.Shekhar,S.Chawla. Object-Based Directional Query Processing in Spatial Databases[J]. IEEE  TKDE, 2008,20(2):295-304  [3] Y.Theodoridis, D.Papadias. Range Queries Involving Spatial Relations: A performance Analysis [C].  Proceedings of the 2nd Conference on Spatial Information Theory (COSIT), 2010:176-180  [4] Yi Zhenshan.Simplex-based 3D-GIS Data Model and Its Preliminary Design.[J].Bulletin of Surveying  and Mapping,2009,12(11):10-13  [5] Qing Zhu et al. An efficient 3D R-tree spatial index method for virtual geographic  environments[J]ISPRS Journal of Photogrammetry and Remote Sensing,2007,62(3):217-224  nBox2.interiorIntersects(Box) is similar with Open Box1.interior- Intersects(Box)  as shown in Fig.5. The pseudo-code for the OpenBox2.interiorIntersects(Box) operation is described as  Algorithm 2.   Fig.5.  An OpenBox2 interiorIntersects a Box  Algorithm 2.:OpenBox2 interiorIntersects a Box  Input: The box needs to be checked;              The current OpenBox2 object, which has attributes(dir1,OpenRect1(endp1,endp2,dir2));        OpenBox2::interiorIntersects(Box, box){          /*case1, Fig5(a)*/           for each epÂ�endpoints of box             if(contains(ep))                return TRUE;         /*case2,Fig.5(b)*/          if(contains(box))             return TRUE;        /*case3,Fig.5(c)*/         opline1a=Openline1(endp1, dir1);         opline1b=Openline1(endp1, dir2);         opline1c=Openline1(endp2, dir2);  opline1d=Openline1(endp2, dir1);  if(opline1a.crosses(box)||opline1b.crosses(box)||opline1c.crosses(box)|| opline1d.crosses(box))                return TURE;            return FALSE;  } Lemma 2: Algorithm 1and Algorithm 2 are complete and correct.  Proof: Algorithm 1 tests three cases and it returns TRUE if and only if one of these three conditions is true.  This guarantees the correctness of the algorithm, i.e., the algorithm returns TRUE only if the OpenBox1  interiorIntersects the box.  Letâ€™s consider a pair of disjoint OpenBox1 and box. Move the box horizontally and then the box will  453 Wang Yunliang and Gu Weijie /  AASRI Procedia  1 ( 2012 )  448 â€“ 453  touch the OpenBox1. When continuously moving the box horizontally, OpenBox1 interiorIntersects the box,  and the relationship between OpenBox1 and box falls into the three cases as described in algorithm 1.This  guarantees the completeness of the algorithm, i.e., the algorithm returns FALSE only when there is no  intersection between t</xocs:rawtext><xocs:serial-item><article xmlns="http://www.elsevier.com/xml/ja/dtd" version="5.1" xml:lang="en" docsubtype="fla"><item-info><jid>AASRI</jid><aid>70</aid><ce:pii>S2212-6716(12)00071-6</ce:pii><ce:doi>10.1016/j.aasri.2012.06.070</ce:doi><ce:copyright type="unknown" year="2012"/></item-info><head><ce:title>Research on Object-orientation-based Open Shape Model in Three-dimensional Space</ce:title><ce:author-group><ce:author><ce:given-name>Wang</ce:given-name><ce:surname>Yunliang</ce:surname></ce:author><ce:author><ce:given-name>Gu</ce:given-name><ce:surname>Weijie</ce:surname><ce:cross-ref refid="cor0005"><ce:sup loc="post">⁎</ce:sup></ce:cross-ref><ce:e-address type="email">gwjysu@163.com</ce:e-address></ce:author><ce:affiliation><ce:textfn>Changzhou Institute of Mechatronic Technology, Changzhou 213164, China</ce:textfn></ce:affiliation><ce:correspondence id="cor0005"><ce:label>⁎</ce:label><ce:text>Corresponding author. Tel.: +13775205406.</ce:text></ce:correspondence></ce:author-group><ce:abstract class="author"><ce:section-title>Abstract</ce:section-title><ce:abstract-sec><ce:simple-para id="spar0005" view="all">Based on the description model of object-orientation-based direction relation in two-dimensional space, the description mode of object-orientation-based direction relation in three-dimensional space is proposed. The basic idea is that the actual direction region is modeled as an open shape. The computation related to the world boundary of spatial direction region is eliminated, and the processing of the direction predicates is converted into the processing of topological operations between open shapes and closed geometry objects. The algorithms of topological operations between open shapes and closed geometry objects are presented and the theoretical proof for the correctness and completeness of the algorithms is performed.</ce:simple-para></ce:abstract-sec></ce:abstract><ce:keywords class="keyword"><ce:section-title>Keywords</ce:section-title><ce:keyword><ce:text>Open shape</ce:text></ce:keyword><ce:keyword><ce:text>Object-oriented-based</ce:text></ce:keyword><ce:keyword><ce:text>Direction relation</ce:text></ce:keyword></ce:keywords></head><tail view="all"><ce:bibliography id="bibl0005" view="all"><ce:section-title>References</ce:section-title><ce:bibliography-sec id="bibs0005"><ce:bib-reference id="bib0005"><ce:label>[1]</ce:label><ce:other-ref><ce:textref>Shashi Shekhar,Xuan Liu,Sanjay Chawla. An Object Model of Direction and Its Implications[J] GeoInformatica, 2009,13,(4):357-379.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0010"><ce:label>[2]</ce:label><ce:other-ref><ce:textref>X. Liu,S. Shekhar,S. Chawla. Object-Based Directional Query Processing in Spatial Databases[J]. IEEE TKDE, 2008,20(2):295-304.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0015"><ce:label>[3]</ce:label><ce:other-ref><ce:textref>Y. Theodoridis, D. Papadias. Range Queries Involving Spatial Relations: A performance Analysis [C]. Proceedings of the 2nd Conference on Spatial Information Theory (COSIT), 2010:176-180.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0020"><ce:label>[4]</ce:label><ce:other-ref><ce:textref>Yi Zhenshan. Simplex-based 3D-GIS Data Model and Its Preliminary Design.[J].Bulletin of Surveying and Mapping, 2009,12(11):10-13.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0025"><ce:label>[5]</ce:label><ce:other-ref><ce:textref>Qing Zhu et al. An efficient 3D R-tree spatial index method for virtual geographic environments[J]ISPRS Journal of Photogrammetry and Remote Sensing, 2007,62(3):217-224.</ce:textref></ce:other-ref></ce:bib-reference></ce:bibliography-sec></ce:bibliography></tail></article></xocs:serial-item></xocs:doc></originalText></full-text-retrieval-response>