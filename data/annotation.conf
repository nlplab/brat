# Simple text-based definitions of hierarchial ontologies of
# (physical) entity types, relation types, event types, and
# attributes.

[entities]

# Definition of entities.
# Format is a simple list with one type per line.

Argument
Note

[relations]

# Definition of (binary) relations.

# Format in brief: one relation per line, with first space-separated
# field giving the relation type and the rest of the line the
# comma-separated arguments in ROLE:TYPE format. The roles are
# typically "Arg1" and "Arg2".

Coref        Arg1:Argument,   Arg2:Argument
<OVERLAP>    Arg1:<ENTITY>,   Arg2:<ENTITY>, <OVL-TYPE>:<ANY>

[events]
# Definition of events.

# Format in brief: one event per line, with first space-separated
# field giving the event type and the rest of the line the
# comma-separated arguments in ROLE:TYPE format. Arguments may be
# specified as either optional (by appending "?" to role) or repeated
# (by appending either "*" for "0 or more" or "+" for "1 or more").

!Causation
	Consequence      Cause?:Argument, Effect?:Argument
	Motivation       Cause?:Argument, Effect?:Argument
	Inference        Cause?:Argument, Effect?:Argument
	Purpose          Cause?:Argument, Effect?:Argument

[attributes]

# Definition of entity and event attributes.

# Format in brief: first tab-separated field is attribute name, second
# a set of key-value pairs. The latter must define "Arg:" which
# specifies what the attribute can attach to (typically "<EVENT>").
# If no other keys are defined, the attribute is binary (present or
# absent). If "Value:" with multiple alternatives is defined, the
# attribute can have one of the given values.

Degree	Arg:<EVENT>, Value:Facilitate|Inhibit|Enable|Disentail, <DEFAULT>:Facilitate