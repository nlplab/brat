Title: Conditional Random Field Autoencoders for Unsupervised Structured Prediction

Abstract: We introduce a framework for unsupervised learning of structured predictors with overlapping, global features. Each input's latent representation is predicted conditional on the observed data using a feature-rich conditional random field (CRF). Then a reconstruction of the input is (re)generated, conditional on the latent structure , using a generative model which factorizes similarly to the CRF. The autoen-coder formulation enables efficient exact inference without resorting to unrealistic independence assumptions or restricting the kinds of features that can be used. We illustrate connections to traditional autoencoders, posterior regularization, and multi-view learning. We then show competitive results with instantiations of the framework for two canonical tasks in natural language processing: part-of-speech induction and bitext word alignment, and show that training the proposed model can be substantially more efficient than a comparable feature-rich baseline.

Content: Introduction

Conditional random fields [24] are used to model structure in numerous problem domains, including natural language processing (NLP), computational biology, and computer vision. They enable efficient inference while incorporating rich features that capture useful domain-specific insights. Despite their ubiquity in supervised settings, CRFs—and, crucially, the insights about effective feature sets obtained by developing them—play less of a role in unsupervised structure learning, a problem which traditionally requires jointly modeling observations and the latent structures of interest. For unsupervised structured prediction problems, less powerful models with stronger independence assumptions are standard.

1

This state of affairs is suboptimal in at least three ways: (i) adhering to inconvenient independence assumptions when designing features is limiting—we contend that effective feature engineering is a crucial mechanism for incorporating inductive bias in unsupervised learning problems; (ii) features and their weights have different semantics in joint and conditional models (see §3.1); and (iii) modeling the generation of high-dimensional observable data with feature-rich models is computationally challenging, requiring expensive marginal inference in the inner loop of iterative parameter estimation algorithms (see §3.1). Our approach leverages the power and flexibility of CRFs in unsupervised learning without sacrificing their attractive computational properties or changing the semantics of well-understood feature sets. Our approach replaces the standard joint model of observed data and latent structure with a twolayer conditional random field autoencoder that first generates latent structure with a CRF (conditional on the observed data) and then (re)generates the observations conditional on just the predicted structure. For the reconstruction model, we use distributions which offer closed-form maximum Extension: partial reconstruction. In our running POS example, the reconstruction model p θ (ˆ x i | y i ) defines a distribution over words given tags. Because word distributions are heavytailed , estimating such a distribution reliably is quite challenging. Our solution is to define a function π : X → ˆ X such that | ˆ X | ≪ |X |, and letˆx i = π(x i ) be a deterministic transformation of the original structured observation. We can add indirect supervision by defining π such that it represents observed information relevant to the latent structure of interest. For example, we found reconstructing Brown clusters [5] of tokens instead of their surface forms to improve POS induction. Other possible reconstructions include word embeddings, morphological and spelling features of words. More general graphs. We presented the CRF autoencoder in terms of sequential Markovian assumptions for ease of exposition; however, this framework can be used to model arbitrary hidden structures. For example, instantiations of this model can be used for unsupervised learning of parse trees [21], semantic role labels [42], and coreference resolution [35] (in NLP), motif structures [1] in computational biology, and object recognition [46] in computer vision. The requirements for applying the CRF autoencoder model are: • An encoding discriminative model defining p λ (y | x, φ). The encoder may be any model family where supervised learning from x, y pairs is efficient. • A reconstruction model that defines p θ (ˆ x | y, φ) such that inference over y given x, ˆ x is efficient. • The independencies among y | x, ˆ x are not strictly weaker than those among y | x.

Learning & Inference

Model parameters are selected to maximize the regularized conditional log likelihood of reconstructed observationsˆx given the structured observation x: We apply block coordinate descent, alternating between maximizing with respect to the CRF parameters (λ-step) and the reconstruction parameters (θ-step). Each λ-step applies one or two iterations of a gradient-based convex optimizer. 5 The θ-step applies one or two iterations of EM [10], with a closed-form solution in the M-step in each EM iteration. The independence assumptions among y make the marginal inference required in both steps straightforward; we omit details for space. In the experiments below, we apply a squared L 2 regularizer for the CRF parameters λ, and a symmetric Dirichlet prior for categorical parameters θ. The asymptotic runtime complexity of each block coordinate descent iteration, assuming the firstorder Markov dependencies in Fig. 2 (right), is: O |θ| + |λ| + |T | × |x| max × |Y| max × (|Y| max × |F yi−1,yi | + |F x,yi |) (3) where F yi−1,yi are the active " label bigram " features used in y i−1 , y i factors, F x,yi are the active emission-like features used in x, y i factors. |x| max is the maximum length of an observation sequence. |Y| max is the maximum cardinality 6 of the set of possible assignments of y i . After learning the λ and θ parameters of the CRF autoencoder, test-time predictions are made using maximum a posteriori estimation, conditioning on both observations and reconstructions, i.e., ˆ y MAP = arg max y p λ,θ (y | x, ˆ x).

Connections To Previous Work

This work relates to several strands of work in unsupervised learning. Two broad types of models have been explored that support unsupervised learning with flexible feature representations. Both are fully generative models that define joint distributions over x and y. We discuss these " undirected " and " directed " alternatives next, then turn to less closely related methods. Undirected models. A Markov random field (MRF) encodes the joint distribution through local potential functions parameterized using features. Such models " normalize globally, " requiring during training the calculation of a partition function summing over all possible inputs and outputs. In our notation: Z(θ) = x∈X * y∈Y |x| exp λ ⊤ ¯ g(x, y) (4) where ¯ g collects all the local factorization by cliques of the graph, for clarity. The key difficulty is in the summation over all possible observations. Approximations have been proposed, including contrastive estimation, which sums over subsets of X * [38] [43] (applied variously to POS learning by Haghighi and Klein [18] and word alignment by Dyer et al. [14]) and noise contrastive estimation [30]. Directed models. The directed alternative avoids the global partition function by factorizing the joint distribution in terms of locally normalized conditional probabilities, which are parameterized in terms of features. For unsupervised sequence labeling, the model was called a " feature HMM " by Berg-Kirkpatrick et al. [3]. The local emission probabilities p(x i | y i ) in a first-order HMM for POS tagging are reparameterized as follows (again, using notation close to ours): p λ (x i | y i ) = exp λ ⊤ g(x i , y i ) x∈X exp λ ⊤ g(x, y i ) (5) The features relating hidden to observed variables must be local within the factors implied by the directed graph. We show below that this locality restriction excludes features that are useful ( §A.1). Put in these terms, the proposed autoencoding model is a hybrid directed-undirected model. Asymptotic Runtime Complexity of Inference. The models just described cannot condition on arbitrary amounts of x without increasing inference costs. Despite the strong independence assumptions of those models, the computational complexity of inference required for learning with CRF autoencoders is better ( §2.1). Consider learning the parameters of an undirected model by maximizing likelihood of the observed data. Computing the gradient for a training instance x requires time O |λ| + |T | × |x| × |Y| × (|Y| × |F yi−1,yi |+|X | × |F xi,yi |) , where F xi−yi are the emission-like features used in an arbitrary assignment of x i and y i . When the multiplicative factor |X | is large, inference is slow compared to CRF autoencoders. Inference in directed models is faster than in undirected models, but still slower than CRF autoencoder models. In directed models [3], each iteration requires time O |λ| + |T | × |x| × |Y| × (|Y| × |F yi−1,yi | + |F xi,yi |)+|θ ′ | × max(|F yi−1,yi |, |F X ,yi |) , where F xi,yi are the active emission features used in an arbitrary assignment of x i and y i , F X ,yi is the union of all emission features used with an arbitrary assignment of y i , and θ ′ are the local emission and transition probabilities. When |X | is large, the last term |θ ′ |×max(|F yi−1,yi |, |F X ,yi |) can be prohibitively large.

Other Related Work

The proposed CRF autoencoder is more distantly related to several important ideas in less-thansupervised learning. Autoencoders and other " predict self " methods. Our framework borrows its general structure, Fig. 2 (left), as well as its name, from neural network autoencoders. The goal of neural autoencoders has been to learn feature representations that improve generalization in otherwise supervised learning problems [44] [8] [39]. In contrast, the goal of CRF autoencoders is to learn specific interpretable regularities of interest. 7 It is not clear how neural autoencoders could be used to learn the latent structures that CRF autoencoders learn, without providing supervised training examples. Stoyanov et al. [40] presented a related approach for discriminative graphical model learning, including features and latent variables, based on backpropagation, which could be used to instantiate the CRF autoencoder. Daumé III [9] introduced a reduction of an unsupervised problem instance to a series of singlevariable supervised classifications. The first series of these construct a latent structure y given the entire x, then the second series reconstruct the input. The approach can make use of any supervised learner; if feature-based probabilistic models were used, a |X | summation (akin to Eq. 5) would be required. On unsupervised POS induction, this approach performed on par with the undirected model of Smith and Eisner [38]. Minka [29] proposed cascading a generative model and a discriminative model, where class labels (to be predicted at test time) are marginalized out in the generative part first, and then (re)generated in the discriminative part. In CRF autoencoders, observations (available at test time) are conditioned on in the discriminative part first, and then (re)generated in the generative part. Posterior regularization. Introduced by Ganchev et al. [16], posterior regularization is an effective method for specifying constraint on the posterior distributions of the latent variables of interest; a similar idea was proposed independently by Bellare et al. [2]. For example, in POS induction, every sentence might be expected to contain at least one verb. This is imposed as a soft constraint, i.e., a feature whose expected value under the model's posterior is constrained. Such expectation constraints are specified directly by the domain-aware model designer. 8 The approach was applied to unsupervised POS induction, word alignment, and parsing. Although posterior regularization was applied to directed feature-less generative models, the idea is orthogonal to the model family and can be used to add more inductive bias for training CRF autoencoder models.

Evaluation

We evaluate the effectiveness of CRF autoencoders for learning from unlabeled examples in POS induction and word alignment. We defer the detailed experimental setup to Appendix A. Part-of-Speech Induction Results. Fig. 3 compares predictions of the CRF autoencoder model in seven languages to those of a featurized first-order HMM model [3] and a standard (feature-less) first-order HMM, using V-measure [37] (higher is better). First, note the large gap between both feature-rich models on the one hand, and the feature-less HMM model on the other hand. Second, note that CRF autoencoders outperform featurized HMMs in all languages, except Italian, with an average relative improvement of 12%. These results provide empirical evidence that feature engineering is an important source of inductive bias for unsupervised structured prediction problems. In particular, we found that using Brown cluster reconstructions and specifying features which span multiple words significantly improve the performance. Refer to Appendix A for more analysis. Bitext Word Alignment Results. First, we consider an intrinsic evaluation on a Czech-English dataset of manual alignments, measuring the alignment error rate (AER; [32]). We also perform an 7 This is possible in CRF autoencoders due to the interdependencies among variables in the hidden structure and the manually specified feature templates which capture the relationship between observations and their hidden structures. 8 In a semi-supervised setting, when some labeled examples of the hidden structure are available, Druck and McCallum [11] used labeled examples to estimate desirable expected values. We leave semi-supervised applications of CRF autoencoders to future work; see also Suzuki and Isozaki [41] . Arabic Basque Danish Greek Hungarian Italian Turkish Average V−measure 0.0 0.1 0.2 0.3 0.4 0.5 0.6 Standard HMM Featurized HMM CRF autoencoder Figure 3: V-measure [37] of induced parts of speech in seven languages. The CRF autoencoder with features spanning multiple words and with Brown cluster reconstructions achieves the best results in all languages but Italian, closely followed by the feature-rich HMM of Berg-Kirkpatrick et al. [3] Higher values are better. . extrinsic evaluation of translation quality in three language pairs, using case-insensitive Bleu [33] of a machine translation system (cdec 9 [13]) built using the word alignment predictions of each model. AER for variants of each model (forward, reverse, and symmetrized) are shown in Table 1 (left). Our model significantly outperforms both baselines. Bleu scores on the three language pairs are shown in Table 1; alignments obtained with our CRF autoencoder model improve translation quality of the Czech-English and Urdu-English translation systems, but not of Chinese-English. This is unsurprising , given that Chinese orthography does not use letters, so that source-language spelling and morphology features our model incorporates introduce only noise here. Better feature engineering, or more data, is called for. We have argued that the feature-rich CRF autoencoder will scale better than its feature-rich alternatives . Fig. 5 (in Appendix A.2) shows the average per-sentence inference runtime for the CRF autoencoder compared to exact inference in an MRF [14] with a similar feature set, as a function of the number of sentences in the corpus. For CRF autoencoders, the average inference runtime grows slightly due to the increased number of parameters, while it grows substantially with vocabulary size in MRF models [14].

5 Conclusion

We have presented a general and scalable framework to learn from unlabeled examples for structured prediction. The technique allows features with global scope in observed variables with favorable asymptotic inference runtime. We achieve this by embedding a CRF as the encoding model in the input layer of an autoencoder, and reconstructing a transformation of the input at the output layer using simple categorical distributions. The key advantages of the proposed model are scalability and modeling flexibility. We applied the model to POS induction and bitext word alignment, obtaining results that are competitive with the state of the art on both tasks.